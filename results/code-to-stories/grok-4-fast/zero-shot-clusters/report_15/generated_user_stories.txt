As a system administrator, I want to process deletions for records dated 12-19-2017, so that outdated entries are removed from the database efficiently.
As a UI designer, I want to simulate a resources page redesign, so that it aligns with Broker styles for better user experience.
As an agency representative, I want to report user testing results to agencies, so that feedback is shared promptly via logs or notifications.
As a developer, I want to integrate New Relic for app monitoring, so that performance data is tracked across applications.
As a data sync operator, I want to sync D1 file generation with FPDS loads, so that files are updated only when necessary.
As a database maintainer, I want to check if FPDS data is updated since a timestamp, so that sync decisions are accurate.
As a file generator, I want to generate D1 files from FPDS data, so that dated text files are created for submissions.
As a SQL administrator, I want to update SQL codes for clarity, so that database schemas include notes for better maintenance.
As a validation specialist, I want to add special cases for PPoPCode like '00*****' and '00FORGN', so that derivation logic handles exceptions.
As a data quality analyst, I want to derive FundingAgencyCode from agency names, so that records have accurate codes for reporting.
As an Atom feed integrator, I want to map FederalActionObligation to Atom entries, so that obligations are properly formatted with IDs and timestamps.
As a ZIP validator, I want to validate PPoP ZIP+4 against legal entity ZIP, so that postal codes match required patterns without errors.
As a UI approver, I want to simulate round 2 edits for DABS/FABS landing pages, so that leadership can review changes.
As a homepage editor, I want to simulate round 2 homepage edits, so that updates are logged for approval.
As a help page maintainer, I want to simulate round 2 and 3 help page edits, so that user guidance is improved iteratively.
As a troubleshooter, I want to improve logging for submissions, so that issues in functions are captured with IDs for debugging.
As a file accessor, I want to access published FABS files by date, so that relevant files are listed quickly.
As a data filter, I want to send only grant records to USAspending, so that non-grant data is excluded from transmissions.
As a content creator, I want to create mockups from submission data, so that JSON files aid efficient UI design.
As an issue tracker, I want to track Tech Thursday issues, so that they are logged with status for testing.
As a testing coordinator, I want to create user testing summaries from SME input, so that UI improvements are documented.
As a tester, I want to begin and schedule user testing for UI requests, so that validation occurs on time.
As a scheduler, I want to design schedules and audits from UI SME timelines and scopes, so that projects have clear estimates and risks.
As an environment manager, I want to reset staging to MAX permissions only, so that FABS tester access is revoked securely.
As an indexer, I want to index domain models for validation, so that database lookups are faster.
As a header updater, I want to include datetime in record headers, so that update times are visible accurately.
As a field formatter, I want to enforce zero-padding on fields, so that data consistency is maintained.
As an error handler, I want to retrieve updated error codes with logic, so that messages are precise for issues.
As an investigator, I want quick access to Broker data via queries, so that investigations are streamlined.
As a permissions granter, I want to grant read-only DABS access to FABS users, so that they can view without editing.
As a landing page developer, I want to simulate FABS/DABS navigation pages, so that users can switch apps easily.
As a status updater, I want to update FABS submission status on changes, so that publish states are reflected in logs.
As a GTAS operator, I want to add GTAS window data and lock the site, so that submissions are restricted during periods.
As a sample file maintainer, I want to update FABS sample files by removing headers like FundingAgencyCode, so that templates are current.
As a UI controller, I want to deactivate publish buttons during derivations, so that incomplete data isn't published.
As a historical loader, I want to derive fields in historical FABS loads, so that agency codes are populated accurately.
As a FREC integrator, I want to include FREC derivations for historical FABS, so that paradigm-specific codes are applied.
As a URL updater, I want to update frontend URLs for accuracy, so that paths reflect page content correctly.
As a data loader, I want to load historical FPDS with extracted and feed data, so that records since 2007 are combined.
As a group provider, I want to provide FABS groups under FREC paradigm, so that organizational structures are accessible.
As a column verifier, I want to ensure historical data has required columns, so that datasets are complete.
As a field accessor, I want to access additional FPDS fields, so that extra data like names or dates is retrievable.
As a dashboard enhancer, I want to add helpful info like request counts and timestamps, so that users see submission details.
As a downloader, I want to download uploaded FABS files, so that originals are available if they exist.
As a load optimizer, I want to determine best methods for historical FPDS loads, so that bulk inserts with indexing are used efficiently.
As a language reviewer, I want to ensure appropriate language on FABS pages, so that clarity is improved for users.
As a banner manager, I want to avoid cross-banners between DABS and FABS, so that each app shows relevant info only.
As a period informer, I want to get submission period start/end dates, so that users know timelines.
As a file uploader, I want to upload and validate files with accurate error messages, so that issues like missing files are clear.
As a rules updater, I want to update validation rule tables for tickets like DB-2213, so that compliance is maintained.
As an error includer, I want to include flexfields in warning/error files for missing required elements, so that affected areas are specified.
As a CFDA clarifier, I want to clarify CFDA error triggers, so that invalid programs or missing titles are explained.
As a launch preparer, I want to update Broker resources for DAIMS launches, so that validations and P&P match versions like 1.1.
As a DUNS validator, I want to accept DUNS for actions B,C,D if SAM registered even if expired, so that valid submissions proceed.
As a date validator, I want to validate DUNS dates against SAM registration periods, so that action dates fall within bounds.
As an extension checker, I want to provide helpful errors for wrong file extensions, so that only .csv or .txt are allowed.
As a duplicate preventer, I want to prevent duplicate publishes with time gaps, so that transactions aren't repeated within 5 minutes.
As a cache manager, I want to manage and cache D file generations, so that repeated requests use stored files.
As a D file generator, I want to generate D files from FABS and FPDS data in CSV format, so that combined data is exportable.
As a raw file accessor, I want to access raw agency-published FABS files, so that USAspending integrations work seamlessly.
As a flexfield handler, I want to handle large flexfields without performance impact, so that up to 100 are processed efficiently.
As a publish preventer, I want to prevent double publishing after refreshes, so that duplicates are avoided via checks.
As a data updater, I want to ensure daily updates for financial assistance data, so that FPDS is current.
As an action guard, I want to prevent correct/delete on non-existent records, so that warnings are logged without creating data.
As a PPoP assurer, I want to ensure accurate PPoPCode and CongressionalDistrict data, so that special cases are derived.
As a display filter, I want to avoid displaying NASA grants as contracts, so that record types are shown correctly.
As a validation determiner, I want to determine D file generation and validation methods, so that API schema checks are used.
As an agency generator, I want to generate and validate D files for agencies, so that outputs are confirmed valid.
As a tester, I want to grant test access to non-staging environments, so that features can be verified across setups.
As an error filter, I want to ensure submission errors represent FABS issues accurately, so that only relevant ones are shown.
As a creator viewer, I want to see who created submissions, so that ownership is tracked accurately.
As a test robustifier, I want to run robust tests for field derivations, so that validation confirms functionality.
As a submitter, I want to submit individual recipients without DUNS errors, so that validation is skipped for them.
As an info provider, I want to show rows to publish before deciding, so that counts inform user choices.
As a ZIP submitter, I want to submit citywide PPoPZIP without errors, so that validations pass for such cases.
As a performance monitor, I want to run validations in reasonable time, so that durations under 30 seconds are ensured with warnings.
As an updater, I want to receive updates to FABS records, so that historical data is refreshed in logs.
As a FSRS excluder, I want to exclude deleted FSRS records from submissions, so that only active ones are included.
As a value acceptor, I want to accept zero/blank values for loan and non-loan records, so that blanks are allowed per rules.
As a deployer, I want to deploy FABS to production, so that financial assistance submissions are live.
As a SAM verifier, I want to ensure SAM data completeness with required fields, so that confidence in data is high.
As a deriver, I want to derive all data elements properly including funding and PPoP, so that records are fully populated.
As an address trimmer, I want to enforce max length for LegalEntityAddressLine3 to 55 characters, so that schema 1.1 compliance is met.
As a header user, I want to use schema v1.1 headers in FABS files, so that standard fields like id and amount are applied.
As a daily assurer, I want to ensure FPDS data is up-to-date daily, so that updates are flagged as complete.
As a historical loader, I want to load all historical FA data for go-live, so that millions of records are ready.
As a FPDS loader, I want to load historical FPDS data, so that past feeds are integrated.
As a format getter, I want to get File F in correct CSV format, so that data is written properly.
As an error improver, I want to provide better file-level errors with details, so that issues are more understandable.
As a field quoter, I want to submit elements with quotes around zeroes, so that data integrity is preserved.
As an office deriver, I want to derive office names from codes, so that mappings like '001' show 'Office of Finance'.
As a dialog linker, I want to link SAMPLE FILE dialogs to correct files like fabs_sample_v1.1.csv, so that users access the right templates.
As a ZIP allower, I want to allow ZIP codes without last 4 digits without errors, so that partial 5-digit ZIPs pass if rules permit.
As a label corrector, I want to correct status labels on dashboards, so that 'pub' shows as 'Published' for clarity.