As an agency user, I want to upload a CSV file for FABS submission, so that it gets validated automatically for data quality.
As a validator, I want to check DUNS numbers for action types B, C, and D against SAM data, so that expired but registered DUNS are accepted without errors.
As a submitter, I want to submit individual recipient records without a DUNS, so that they are processed without mandatory DUNS errors.
As a data processor, I want to validate ZIP codes allowing 5-digit formats without the last 4 digits, so that partial ZIPs do not trigger errors.
As a loan officer, I want to allow zero or blank values for loan amount and interest rate fields, so that loan records can be submitted flexibly.
As a non-loan submitter, I want CFDA codes validated in the format XX.XXX, so that invalid formats are flagged with clear error messages.
As an administrator, I want flexfields to generate warnings only if required fields are missing, so that optional flexfields do not block submissions.
As a file uploader, I want file-level errors for incorrect extensions like non-CSV, so that uploads fail early with helpful messages.
As a publisher, I want to prevent duplicate publications of the same submission, so that data integrity is maintained.
As a dashboard user, I want to view submission status labels like Draft, Published, or Error, so that I can track progress easily.
As a historical data loader, I want to derive FREC codes from agency and office codes in historical FABS data, so that legacy records are standardized.
As a data integrator, I want to derive FundingAgencyCode from record data, so that financial assistance data quality improves.
As a performance place analyst, I want to derive PPoPCode including 00FORGN for foreign districts, so that place of performance is accurately coded.
As a submission manager, I want to set and retrieve GTAS submission windows with lock status, so that periods are controlled for reporting.
As a file generator, I want to combine FABS and FPDS data synced on ID for D1 file generation, so that integrated reports are up-to-date.
As a cache user, I want D1 files cached based on daily FPDS loads, so that regeneration is avoided when no updates occur.
As a flexfield handler, I want large flexfields processed without performance impact, so that submissions with many fields load quickly.
As a deletion processor, I want to delete published awards before a specific date like 2017-12-19, so that outdated data is cleaned.
As a file formatter, I want File F generated with all fields quoted to handle zeroes properly, so that CSV exports are reliable.
As a submission uploader, I want generated error and warning CSV files from validations, so that issues can be reviewed and fixed offline.
As a publisher, I want the publish button to deactivate after successful publication, so that accidental double-publishing is prevented.
As a dashboard viewer, I want submission details including rows count, creator, and update date/time, so that I can monitor agency submissions.
As a file downloader, I want to access uploaded original FABS files by submission ID, so that I can review or reprocess them.
As a period checker, I want to retrieve active submission start and end dates from GTAS windows, so that I submit within valid periods.
As a UI designer, I want the Resources page redesigned to match Broker styles like blue color and Arial font, so that consistency improves user experience.
As a landing page user, I want edited FABS and DABS landing pages with navigation and read-only access info, so that guidance is clear.
As a header viewer, I want submission headers showing full date and time plus creator, so that update history is visible.
As a sample file user, I want links to agency-specific sample CSV files like v1.1 format, so that I can prepare correct submissions.
As a tech tracker, I want issues from Tech Thursday logged to a file, so that UI and validation problems are documented.
As an agency reporter, I want user testing results reported with summaries and schedules, so that improvements are prioritized.
As a permission admin, I want environment permissions reset to Staging MAX only, so that testing is secure.
As a data accessor, I want read-only access to DABS data for FABS users, so that cross-system insights are available without edits.
As a historical loader, I want FPDS data loaded since 2007 with derived fields like pop_code, so that long-term analysis is supported.
As a deployer, I want FABS deployed to production with updated validations, so that live users get reliable features.
As a SAM integrator, I want complete SAM data for DUNS validation including citywide ZIP, so that entity checks are accurate.
As a schema user, I want v1.1 headers accepted in submissions without errors, so that updated formats are supported.
As a daily updater, I want FPDS and financial assistance data refreshed daily, so that reports reflect current information.
As a record updater, I want FABS records updated post-submission, so that corrections can be made without new uploads.
As a filterer, I want deleted FSRS records excluded from processing, so that only active data is included.
As a grant filterer, I want NASA grants filtered out if treated as contracts, so that data categorization is correct.
As a tester, I want features tested in non-production environments, so that stability is ensured before live deployment.
As a language updater, I want FABS UI language updated for clarity without cross-banners from DABS, so that focus remains on FABS tasks.
As a indexer, I want domain models indexed for fast validation, so that large files process quickly.
As a zero-padder, I want fields enforced with zero-padding, so that numeric fields align correctly.
As a relator, I want New Relic integration for monitoring all apps, so that performance issues are tracked.
As a mapper, I want FederalActionObligation mapped to Atom Feed, so that feeds are accurately populated.
As a SQL updater, I want SQL codes updated for clarity in queries, so that maintenance is easier.
As a USAspending user, I want access filtered to grant records only, so that relevant financial data is prioritized.
As a content creator, I want mockups for efficient submission processes, so that user guidance is improved.
As a submission viewer, I want quick access to Broker data via dashboard queries, so that status checks are efficient.