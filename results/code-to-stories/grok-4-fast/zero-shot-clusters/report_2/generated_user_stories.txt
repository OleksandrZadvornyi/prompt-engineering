As an agency user, I want to upload and validate FABS files with accurate error messages for wrong extensions, so that I can correct issues quickly without confusion.
As a developer, I want to update validation rules for DUNS and ZIP codes dynamically, so that the system accepts expired DUNS for specific action types and partial ZIP+4 formats.
As a FABS submitter, I want flexfields included in error reports only when required elements are missing, so that I get targeted feedback for my submissions.
As a system administrator, I want CFDA errors clarified with specific triggers like invalid format or duplicates, so that troubleshooting is more efficient.
As a user, I want to prevent duplicate publishing of submissions, so that I avoid accidental re-processing and data inconsistencies.
As a data analyst, I want D files generated and cached from FABS and FPDS data, so that I can access combined reports without redundant computations.
As a website user, I want read-only access to published FABS files via USAspending, so that I can review agency data without modification risks.
As a FABS user, I want large numbers of flexfields handled without performance impact, so that submissions with up to 1000 flexfields process efficiently.
As a submitter, I want to prevent double publishing after a page refresh, so that my actions are idempotent and data integrity is maintained.
As an agency user, I want FABS submission status updated automatically on changes, so that I can track progress from draft to published.
As a system operator, I want GTAS window data integrated to enable site lockdowns, so that submissions are paused during active periods.
As a FABS tester, I want sample files updated without FundingAgencyCode headers, so that they match current schema requirements.
As a user, I want the publish button deactivated during derivations, so that I don't interrupt ongoing processing.
As a data loader, I want fields like agency codes derived in historical FABS loaders, so that legacy data is consistent with modern formats.
As a submitter, I want FREC derivations included in historical FABS loads, so that USASpending displays data accurately.
As a FABS user, I want frontend URLs updated to reflect accurate page paths, so that navigation is intuitive and error-free.
As a data processor, I want historical FPDS data loaded from both extracted and feed sources, so that all records since 2007 are comprehensive.
As a dashboard user, I want helpful information added to the submission dashboard, so that I can manage IG requests easily.
As a FABS submitter, I want to download uploaded files directly, so that I can review or reuse my submissions.
As an agency user, I want submission periods displayed with start and end dates, so that I know when to submit data.
As a FABS submitter, I want individual recipients submitted without DUNS errors, so that personal data flows without unnecessary validations.
As a submitter, I want info on how many rows will be published before finalizing, so that I can confirm the scope of my action.
As a user, I want citywide ZIP codes (00000) accepted for PPoP, so that broad location submissions are valid.
As a FABS user, I want validations to run in under 1 minute, so that I get quick feedback on large files.
As an agency user, I want to receive updates to FABS records seamlessly, so that my data stays current without manual intervention.
As a data validator, I want deleted FSRS records excluded from submissions, so that only active data is processed.
As a loan submitter, I want zero or blank values accepted for loan records, so that incomplete financials don't block submission.
As a developer, I want FABS deployed to production smoothly, so that users can submit data reliably.
As a system user, I want SAM data confirmed complete before use, so that validations are based on reliable sources.
As a data processor, I want all derived elements like PPoPCode and FundingAgencyCode computed properly, so that reports are accurate.
As a FABS submitter, I want LegalEntityAddressLine3 limited to schema v1.1 max length, so that files validate without truncation errors.
As a file loader, I want schema v1.1 headers enforced in FABS files, so that uploads match the latest format.
As a data maintainer, I want FPDS data refreshed daily, so that financial assistance views are always up-to-date.
As a go-live operator, I want all historical FABS data loaded for launch, so that the system starts with complete records.
As a user, I want file-level errors enhanced with row details, so that debugging is faster.
As a submitter, I want data elements quoted to preserve leading zeros from Excel, so that numeric fields import correctly.
As a data viewer, I want office names derived from codes on dashboards, so that I understand agency context without lookup.
As a dialog user, I want SAMPLE FILE links pointing to the correct updated version, so that I download the right template.
As a ZIP submitter, I want partial ZIP codes (first 5 digits) accepted without error, so that incomplete addresses don't fail validation.
As a dashboard viewer, I want submission status labels corrected and uppercase, so that visibility is clear and consistent.
As a UI designer, I want to apply round-based edits to pages like DABS landing and homepage, so that leadership approvals are streamlined.
As a troubleshooter, I want enhanced logging for submissions with full details, so that issues are easier to diagnose.
As a website user, I want access to published FABS files filtered by status, so that I retrieve only relevant data.
As a data sender, I want only grant records sent to USAspending, so that contract data doesn't contaminate financial assistance views.
As a content creator, I want mockups for efficient submission layouts, so that user experience is optimized.
As a tester, I want Tech Thursday issues tracked for fixes, so that recurring problems are addressed systematically.
As a UI improver, I want user testing scheduled with advance notice, so that participants are prepared and feedback is valuable.
As a developer, I want environment reset to staging permissions only, so that production access is securely limited.
As a validator, I want domain models indexed for faster checks, so that large submissions validate quickly.
As a dashboard user, I want headers updated with both date and time, so that I track changes precisely.
As a data formatter, I want fields zero-padded as required, so that fixed-width formats are maintained.
As a developer, I want quick access to broker data in non-production, so that testing and debugging are efficient.
As a FABS user, I want read-only DABS access granted, so that I can view related data without edit risks.
As a navigator, I want a landing page for FABS and DABS, so that I switch between systems easily.
As a historical loader, I want deletions processed for specific dates like 12-19-2017, so that legacy cleanups are targeted.
As a UI designer, I want resources page redesigned to match broker styles, so that branding is consistent.
As an agency reporter, I want user testing results reported, so that agencies contribute to UX improvements.
As a monitor, I want New Relic data integrated across apps, so that performance insights are centralized.
As a file generator, I want D1 files synced with FPDS loads and cached, so that generations avoid duplicates.
As a SQL user, I want queries updated for clarity with comments, so that maintenance is straightforward.
As a PPoP validator, I want special cases like 00***** derived, so that international or wildcard locations are handled.
As an agency coder, I want FundingAgencyCode auto-derived, so that data quality improves without manual entry.
As a feed mapper, I want FederalActionObligation mapped to Atom feeds, so that external integrations work seamlessly.
As a PPoP submitter, I want ZIP+4 validations matching legal entity ZIP or citywide, so that place of performance is accurate.
As a submission updater, I want NASA grants classified correctly as non-contracts, so that displays reflect true types.
As a test user, I want access to features in non-production environments, so that I experiment without prod risks.
As a error reporter, I want FABS submission errors detailed accurately, so that fixes target root causes.
As a submission viewer, I want to see the creator of each submission, so that accountability is clear.
As a tester, I want robust checks on test file derivations, so that field computations are verified.
As a recipient submitter, I want no DUNS error for individuals, so that privacy-sensitive data submits easily.
As a deployer, I want historical FPDS loaded comprehensively, so that backfills are complete and reliable.
As a file formatter, I want File F output in correct delimited format, so that downstream processes ingest it properly.