{
    "request_number": 13,
    "timestamp": "2025-10-12 21:29:56",
    "model": "x-ai/grok-4-fast",
    "prompt_variant": "zero-shot-clusters",
    "total_tokens": 8453,
    "avg_prob": 0.9068782684425,
    "perplexity": 1.1026838273646473,
    "struct_metrics": {
        "avg_cyclomatic_complexity": 1.6237623762376239,
        "ast_depth": 13,
        "avg_function_size_lines": 6.326315789473684,
        "import_redundancy_ratio": 0.15384615384615385
    },
    "semantic_metrics": {
        "syntax_valid": true,
        "flake8_error_count": 23,
        "mypy_error_count": 3
    },
    "execution_metrics": {
        "execution_success": true,
        "execution_time_sec": 3.799,
        "exception_type": "",
        "exception_message": "",
        "runtime_output": "/app/main.py:20: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n  Base = declarative_base()\n/app/main.py:107: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n  submission = self.session.query(SubmissionTable).get(submission_id)\n2025-10-25 18:22:57,773 - INFO - Processed deletion for submission 1\n2025-10-25 18:22:57,773 - INFO - Resources page redesigned\n2025-10-25 18:22:57,773 - INFO - No FPDS updates; skipping D1 regeneration\n2025-10-25 18:22:57,774 - INFO - Derived FundingAgencyCode: Derived_00TEST\n2025-10-25 18:22:57,774 - INFO - Page edits for Homepage: Leadership approval pending round 2\n2025-10-25 18:22:57,774 - INFO - Submission 1: Upload - Timestamp: 2025-10-25 18:22:57.774212\n2025-10-25 18:22:57,774 - INFO - Accessed FABS files for TEST\n2025-10-25 18:22:57,774 - INFO - User testing report sent: {'date': '2025-10-25T18:22:57.774514', 'contributions': 'Improved UX based on feedback', 'agencies': ['AgencyA']}\n/app/main.py:324: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n  submission = self.session.query(SubmissionTable).get(submission_id)\n2025-10-25 18:22:57,777 - INFO - Submission 1 status changed to published\n2025-10-25 18:22:57,777 - INFO - Loaded 3 historical FPDS records since 2007\n2025-10-25 18:22:57,777 - INFO - FABS sample file updated\n2025-10-25 18:22:57,778 - INFO - Processed 1 flexfields efficiently\n2025-10-25 18:22:57,778 - INFO - FABS deployed to production\n2025-10-25 18:22:57,778 - INFO - Loaded 3 historical FPDS records since 2007\n2025-10-25 18:22:57,778 - INFO - FPDS updated daily\n2025-10-25 18:22:57,778 - INFO - Derived office: Test Office from 00TEST\n2025-10-25 18:22:57,778 - INFO - FABS sample file updated\n2025-10-25 18:22:57,778 - INFO - SAMPLE FILE linked to: fabs_sample.txt\n2025-10-25 18:22:57,779 - INFO - ZIP 12345 accepted without +4\n2025-10-25 18:22:57,779 - INFO - Status label: Pending\n2025-10-25 18:22:57,779 - INFO - Broker system demo complete\n{\"header\": \"Updated Resources Page\", \"styles\": \"Broker design: Modern, responsive, blue theme\", \"sections\": [\"Validations\", \"P&P\", \"Downloads\"]}\nLeadership approval pending round 2\n['TEST_fabs_1.txt', 'TEST_fabs_2.txt', 'TEST_fabs_3.txt']\n{'date': '2025-10-25T18:22:57.774514', 'contributions': 'Improved UX based on feedback', 'agencies': ['AgencyA']}\nValidation passed\nFile extension must be .fabs or .txt. Please check and re-upload.\nd_file.zip\nTest Office\nfabs_sample.txt\nTrue\nPending"
    },
    "total_credibility": 67.12
}