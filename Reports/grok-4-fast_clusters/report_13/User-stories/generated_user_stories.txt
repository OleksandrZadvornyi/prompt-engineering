As an agency user, I want to create a new submission with file path and agency details, so that I can track pending validations and publications.
As an administrator, I want to process deletions for specific submissions, so that outdated or erroneous data is marked as deleted without removal.
As a UI designer, I want to redesign the resources page with Broker styles, so that it matches modern, responsive themes for better user experience.
As an agency coordinator, I want to report user testing results to agencies, so that feedback contributions improve overall system UX.
As a data engineer, I want to sync D1 file generation with FPDS updates, so that derived files accurately reflect current data loads.
As a system operator, I want to check if FPDS data is recently updated, so that I can skip unnecessary regenerations and optimize processing.
As a developer, I want to update SQL code with comments for clarity, so that maintenance and troubleshooting are easier.
As a data validator, I want to add special cases for PPoPCode like 00***** or 00FORGN, so that foreign or special derivations are handled correctly.
As a data analyst, I want to derive FundingAgencyCode from AgencyCode, so that data quality is improved with cached derived fields.
As a feed integrator, I want to map FederalActionObligation to Atom feed entries, so that financial assistance data is properly formatted for syndication.
As a submission user, I want to validate PPoP ZIP+4 codes matching Legal Entity ZIP format, so that address data consistency is ensured.
As a UI maintainer, I want to perform round 2 edits on landing pages like DABS/FABS and Homepage, so that navigation and content reflect leadership approvals.
As a troubleshooter, I want to improve logging for submission events with timestamps, so that debugging uploads and processes is more efficient.
As an agency archivist, I want to access published FABS files by agency, so that historical data retrieval is straightforward.
As a data filter, I want to ensure only grant records are sent to USAspending, so that irrelevant contract data is excluded.
As a content creator, I want to generate mockups for submission sections and guides, so that users have step-by-step efficient submission aids.
As a tester, I want to track Tech Thursday issues with status labels, so that testing and fixes are prioritized effectively.
As a UI specialist, I want to create user testing summaries from SME feedback, so that improvements are documented with timelines.
As a project manager, I want to begin and schedule user testing sessions, so that buy-in is confirmed and UI enhancements proceed on time.
As an auditor, I want to design UI schedules and audits from SME input, so that scope and timelines are clearly defined.
As an environment admin, I want to reset staging to MAX permissions only, so that FABS testers' access is revoked for security.
As a performance optimizer, I want to index domain models for validations, so that processing speed is increased.
As a dashboard user, I want header info to show updated date and time, so that recent changes are visible at a glance.
As a data formatter, I want to enforce zero-padding on numeric string fields, so that data alignment and schema compliance is maintained.
As a support agent, I want to retrieve updated error codes with logic details, so that users understand issues like DUNS or ZIP invalidity.
As an investigator, I want quick access to Broker data via queries, so that FPDS and other results aid in data investigations.
As a FABS user, I want read-only access to DABS data, so that cross-system reference is possible without edit risks.
As a navigator, I want a landing page to switch between FABS and DABS sections, so that workflow navigation is intuitive.
As a publisher, I want to update FABS submission status on publish changes, so that pending to published transitions are tracked accurately.
As a financial coordinator, I want to add GTAS window data with lockdown periods, so that submission timelines are enforced.
As a sample provider, I want to update FABS sample files without certain headers, so that users have clean templates for uploads.
As a UI controller, I want to deactivate the publish button during derivations, so that incomplete processes don't allow premature publishing.
As a historical loader, I want to derive fields like agency codes in FABS loaders, so that legacy data includes FREC derivations.
As a data loader, I want to load historical FABS with derived fields, so that past records are fully enriched for analysis.
As a frontend developer, I want to update FABS-specific URLs, so that page links accurately reflect the module.
As a FPDS manager, I want to load historical FPDS from extracted and feed sources, so that data since 2007 is comprehensive.
As a group organizer, I want to provide FABS groups under FREC paradigm, so that categorized historical records are accessible.
As a data completer, I want to ensure historical data has all required columns, so that gaps are filled with defaults for consistency.
As a field accessor, I want to access additional FPDS fields like agency details, so that enriched data pulls support derivations.
As a dashboard enhancer, I want to add helpful info like IG requests to submission dashboards, so that users get validation tips.
As a file manager, I want to download uploaded FABS files, so that re-verification or backups are easy.
As a loader strategist, I want to determine and apply the best method for historical FPDS loads, so that batch processing with derivations is efficient.
As a content updater, I want to refine FABS page language, so that confusing terms are replaced with clear ones.
As a banner controller, I want to hide DABS banners on FABS pages, so that module-specific views are uncluttered.
As a period viewer, I want to see submission start and end periods by agency, so that deadlines are known in advance.
As an uploader, I want accurate error messages for file uploads and validations, so that extension issues like .fabs are clearly flagged.
As a rule maintainer, I want to update Broker validation rule tables, so that DB changes like DB-2213 are reflected in error handling.
As an error reporter, I want flexfields included in warning/error files for missing required elements, so that impacts are visible.
As a CFDA validator, I want clarified triggers for CFDA errors like SAM mismatches, so that users understand validation failures.
As a launch preparer, I want to update Broker resources, validations, and P&P for DAIMS v1.1, so that FABS launches are schema-aligned.
As a DUNS checker, I want to validate DUNS for action types B/C/D with SAM checks, so that registrations are confirmed even if expired.
As a file uploader, I want helpful file-level errors for wrong extensions, so that re-uploads are guided with specific instructions.
As a publisher guard, I want to prevent duplicate transaction publishes, so that validation-to-publish gaps don't create duplicates.
As a cache manager, I want to manage and cache D Files generation requests, so that repeated derivations from FABS/FPDS are efficient.
As a file generator, I want to generate D Files combining FABS and FPDS data, so that agency validations have complete zips.
As a raw data accessor, I want to access raw agency-published FABS files via USAspending, so that unaltered data is retrievable.
As a flexfield handler, I want to process large numbers of flexfields without performance impact, so that submissions scale efficiently.
As a refresh guard, I want to prevent double publishing after page refreshes, so that accidental duplicates are avoided.
As a daily updater, I want to ensure daily financial assistance data updates, so that FPDS loads keep information current.
As a delete protector, I want to prevent corrections on non-existent records, so that no new erroneous data is created.
As a field deriver, I want accurate derivations for PPoPCode and Congressional District, so that location data is precise.
As a grant filter, I want to hide NASA grants from contract views, so that type-specific displays avoid confusion.
As a D file strategist, I want to determine agency methods for D Files generation from FABS/FPDS, so that API validations are clear.
As a user generator, I want to generate and validate D Files from provided data, so that combined FABS/FPDS records pass checks.
As a tester, I want access to non-prod features in any environment, so that testing in dev/staging is unrestricted.
As an error reporter, I want FABS submission errors to accurately reflect specific issues, so that troubleshooting targets FABS only.
As a submission viewer, I want to see the creator of each submission, so that accountability and follow-up are maintained.
As a test engineer, I want robust test files for derivation checks, so that logging confirms passing derivations.
As a recipient submitter, I want to submit individual recipients without DUNS errors, so that non-business entities pass validation.
As a publisher previewer, I want to see row counts before publishing, so that informed decisions prevent over-publishing.
As a ZIP submitter, I want to submit citywide PPoPZIP and pass validation, so that broad locations are accepted.
As a validator, I want validations to run in reasonable time for large record sets, so that user wait times are minimized.
As an updater, I want to receive and apply updates to FABS records, so that corrections are integrated seamlessly.
As a FSRS filter, I want to exclude deleted FSRS records from submissions, so that only active data is processed.
As a loan validator, I want to accept zero or blank amounts for loans and non-loans, so that flexible financial entries comply.
As a deployer, I want to deploy FABS updates to production, so that new features go live reliably.
As a SAM verifier, I want to ensure SAM data pulls are complete, so that confidence in registration details is high.
As a deriver, I want all data elements properly derived including PPoP and funding codes, so that submissions are fully enriched.
As an address formatter, I want to enforce max length on LegalEntityAddressLine3, so that v1.1 schema limits are respected.
As a header user, I want FABS files to use v1.1 schema headers like UEI, so that uploads align with current standards.
As a daily checker, I want FPDS data to be up-to-date daily, so that historical loads reflect the latest feeds.
As a go-live preparer, I want to load all historical financial assistance data, so that FABS launch has complete backfill.
As an agency loader, I want to load historical FPDS filtered by agency, so that targeted data retrieval is efficient.
As a file formatter, I want to generate File F in correct schema format, so that required outputs are compliant.
As an error improver, I want detailed file-level errors with line references, so that issues like quotes or zeros are easier to fix.
As a data submitter, I want to submit elements with surrounding quotes, so that leading zeros are preserved in processing.
As an office viewer, I want to derive and see office names from agency codes, so that human-readable labels replace codes.
As a dialog linker, I want SAMPLE FILE links to point to the correct updated file, so that users access the right templates on dialogs.
As a ZIP validator, I want to accept 5-digit ZIP without +4 extension, so that partial addresses don't trigger errors.
As a dashboard viewer, I want correct status labels like 'Pending' on submissions, so that dashboard clarity is enhanced.