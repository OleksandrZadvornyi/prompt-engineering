As a FABS submitter, I want to upload and validate CSV files with accurate error messages, so that I can identify and fix issues before submission.
As a system administrator, I want to process deletions for specific dates in the database, so that outdated submissions are removed efficiently.
As a data analyst, I want to derive funding agency codes from agency data, so that data quality is improved for reporting.
As a submitter, I want to derive PPoP codes including foreign and domestic cases, so that place of performance is accurately represented.
As a validator, I want to validate PPoP ZIP codes similar to legal entity ZIPs, so that citywide ZIPs are accepted without errors.
As a publisher, I want to map federal action obligations to an Atom feed, so that financial data is shared in a standardized format.
As a data loader, I want to sync D1 file generation with FPDS data updates, so that files are generated efficiently using cache.
As a developer, I want to update SQL code for clarity with comments, so that maintenance and troubleshooting are easier.
As a data loader, I want to load historical FPDS data including extracted fields, so that all past records are available for analysis.
As a submitter, I want to update FABS submission status when publish status changes, so that the dashboard reflects current progress.
As a user, I want the publish button deactivated during derivations, so that accidental publishing is prevented mid-process.
As a administrator, I want to add GTAS window data to lock the site during submission periods, so that data integrity is maintained.
As a sample file maintainer, I want to update FABS sample files by removing unnecessary headers, so that users get clean examples.
As a data loader, I want to load historical FABS data with FREC derivations and all columns, so that legacy data is properly integrated.
As a data accessor, I want to access additional fields from FPDS data pulls, so that enriched information is available for submissions.
As a dashboard user, I want to generate submission dashboard info including totals and requests, so that I can monitor my activities.
As a submitter, I want to download uploaded FABS files, so that I can review or edit previously submitted data.
As a FABS user, I want appropriate language and banners without cross-system references, so that the interface is tailored to my needs.
As a planner, I want to know submission periods start and end dates, so that I can time my submissions correctly.
As a submitter, I want to prevent duplicate transactions during validation and publishing, so that no redundant data is created.
As a publisher, I want to prevent double publishing after page refresh, so that submissions are only published once.
As a file generator, I want to manage and cache D file generation requests, so that performance is optimized for repeated access.
As a flexfield handler, I want to include large numbers of flexfields without performance impact, so that complex submissions are supported.
As a data reviewer, I want to ensure NASA grants are not shown as contracts, so that award types are displayed accurately.
As a researcher, I want to access raw published FABS files via USAspending, so that agency-specific data is retrievable.
As a daily updater, I want to see updated financial assistance data daily from FPDS, so that reports stay current.
As a corrector, I want to prevent corrections or deletions of non-existent records from creating new data, so that the database remains accurate.
As a deriver, I want to derive accurate PPoP congressional districts from ZIP and state, so that location data is complete.
As a submitter, I want to submit individual recipients without DUNS errors, so that personal awards are handled smoothly.
As a decision maker, I want to see rows to publish info before deciding, so that I can assess the impact of publication.
As a ZIP validator, I want to submit citywide PPoP ZIPs without errors, so that partial ZIPs are accepted as valid.
As a performance tester, I want validations to run in reasonable time, so that large files are processed without delays.
As a record updater, I want to receive updates to FABS records via Atom feed, so that changes are propagated efficiently.
As a filterer, I want to exclude deleted FSRS records from inclusions, so that only active data is used.
As a loan handler, I want to accept zero or blank amounts for loan and non-loan records appropriately, so that validations are flexible.
As a deployer, I want to deploy FABS to production, so that the system is live for users.
As a data assurer, I want to confirm SAM data completeness, so that registrations are reliable.
As a deriver, I want all derived data elements like funding agency and PPoP to be properly calculated, so that submissions are enriched.
As a schema user, I want to use schema v1.1 headers for compatibility, so that files meet the latest standards.
As a FPDS maintainer, I want FPDS data updated daily, so that financial assistance is current.
As a historical loader, I want all historical financial assistance data loaded, so that comprehensive archives are available.
As a file generator, I want to generate File F in the correct format, so that exports are standardized.
As an error reporter, I want better file-level error messages, so that issues like invalid extensions are clear.
As an office viewer, I want to see office names derived from codes, so that codes are human-readable.
As a sample linker, I want the SAMPLE FILE linked to the correct version, so that users download the right template.
As a status viewer, I want correct status labels on the dashboard, so that submission progress is unambiguous.
As a rule updater, I want to update Broker validation rules for specific tickets, so that new requirements are implemented.
As a flexfield error handler, I want flexfields to appear in error files if only required fields are missing, so that data is preserved.
As an error clarifier, I want CFDA errors clarified for new awards, so that submitters understand triggers.
As a resource updater, I want to update Broker resources and policies for v1.1 launch, so that documentation is current.
As a logger, I want better logging for submissions and functions, so that troubleshooting is effective.
As a file accessor, I want to access published FABS files, so that historical submissions are retrievable.
As a sender, I want USAspending to only send grant records, so that irrelevant data is filtered.
As a content creator, I want to create mockups for efficient submission interfaces, so that design is user-focused.
As an issue tracker, I want to track issues from Tech Thursday sessions, so that problems are resolved promptly.
As a tester, I want a user testing summary from UI SME data, so that feedback is summarized.
As a scheduler, I want to begin and schedule user testing sessions, so that quality assurance is planned.
As a designer, I want UI schedules and audits from SME input, so that designs align with user needs.
As an environment manager, I want to reset to staging permissions only, so that access is controlled.
As an indexer, I want to index domain models for faster validation, so that performance improves.
As a header viewer, I want submission headers to show updated date and time, so that timestamps are precise.
As a field formatter, I want only zero-padded fields applied where needed, so that data consistency is maintained.
As an error coder, I want updated error codes with logic explanations, so that issues are diagnosable.
As a data querier, I want quick access to Broker app data via queries, so that information is readily available.
As a FABS user, I want read-only access to DABS, so that related systems are viewable without edits.
As a navigator, I want a landing page to switch between FABS and DABS, so that navigation is streamlined.
As a grouper, I want FABS groups provided under FREC paradigm, so that organization is structured.
As a column checker, I want historical data to include all necessary columns, so that completeness is ensured.