As a FABS submitter, I want to upload a CSV file for validation, so that errors like missing DUNS or invalid ZIP codes are identified and reported per row.
As an agency administrator, I want to initialize a database with tables for submissions and awards, so that historical and current data can be stored persistently.
As a validator, I want to check DUNS registration against SAM data, so that actions B, C, D are accepted even if expired, but others are rejected if expired.
As a user handling place of performance, I want to validate ZIP+4 codes allowing 5 digits or citywide entries, so that flexible location data is accepted without errors.
As a data deriver, I want to generate PPoPCode from state codes like 00***** or 00FORGN, so that standardized codes are derived for awards.
As a FABS processor, I want to derive FundingAgencyCode from awarding agency or FPDS data, so that data quality is improved for reporting.
As a historical data loader, I want to import FABS CSV files from 2007 onward and derive FREC fields, so that complete historical datasets are available for analysis.
As a system integrator, I want to load both historical FPDS files and current feeds into the database, so that synchronized contract data supports FABS processing.
As a submission manager, I want to handle file uploads with quote-aware CSV reading, so that zero values are not misinterpreted as missing data.
As an error handler, I want to generate an error CSV file if validation fails, so that users can correct issues and resubmit efficiently.
As a publisher, I want to prevent duplicate publishes within 60 seconds, so that accidental double-submissions are avoided.
As a dashboard user, I want to view submission statuses with labels like 'Pending Review' and row counts, so that progress can be tracked easily.
As a data maintainer, I want to delete duplicate published awards keeping only the first instance, so that the database remains clean and accurate.
As a D-file generator, I want to combine FABS and FPDS data with derived congressional districts, so that synced reports are produced for agencies.
As a caching user, I want to cache generated D-files for 1 hour unless forced, so that repeated requests are served quickly without regeneration.
As a GTAS coordinator, I want to set submission windows and lock the site during periods, so that data integrity is maintained during fiscal closes.
As a deletion processor, I want to handle specific 2017 deletions by removing records with matching PIIDs, so that outdated entries are purged.
As an office manager, I want to derive office names from stored codes, so that human-readable labels are added to records for better usability.
As a UI maintainer, I want to update dashboard info with helpful tips and full datetime stamps, so that users get clear status and guidance.
As a flexfield handler, I want to process large numbers of flexfields in batches, so that performance is not impacted during validation.
As a NASA user, I want to ensure grants are not misdisplayed as contracts, so that accurate award types are shown in reports.
As a FSRS integrator, I want to exclude deleted FSRS records from submissions, so that only active data is processed.
As a tester, I want access to raw published FABS files via queries, so that investigations and audits can be performed quickly.
As a database admin, I want to index tables like submissions by agency_id, so that validations and queries run faster.
As a production deployer, I want to reset permissions to staging-only for FABS testers, so that secure environments are maintained.
As a FREC user, I want to retrieve FABS groups under the FREC paradigm, so that organized financial reporting is facilitated.
As a sample file user, I want the sample file link to point to the correct version, so that users can reference accurate examples.
As a production operator, I want to deploy FABS updates to production, so that new features are live without downtime.
As a historical loader, I want to bulk-load all financial assistance history for go-live, so that baseline data is complete.
As a validation updater, I want to update rules in the database via tickets like DB-2213, so that compliance evolves with requirements.
As a correction handler, I want operations on non-existent records to be idempotent, so that no new erroneous data is created.
As an individual submitter, I want to bypass DUNS validation for individual recipients, so that personal awards can be submitted seamlessly.
As a tester, I want to run robust test files and verify derivations, so that system reliability is confirmed before release.
As a error reviewer, I want accurate FABS-specific error lists for submissions, so that fixes are targeted correctly.
As a submission viewer, I want to see the creator ID for each submission, so that accountability is maintained.
As a location submitter, I want to accept 'citywide' in PPoPZIP without errors, so that broad geographic awards are handled.
As a performance monitor, I want validations to complete in under 30 seconds, so that user experience remains responsive.
As an Atom feed mapper, I want FederalActionObligation mapped to feed entries, so that financial data integrates with external systems.
As an investigator, I want quick SQL access to broker data like recent submissions, so that issues can be diagnosed rapidly.
As a DABS user, I want read-only access for FABS team members, so that cross-app data viewing is possible without risks.
As a navigator, I want a landing page for FABS/DABS, so that users can easily switch between applications.
As a frontend maintainer, I want accurate URLs updated on FABS pages, so that navigation works without broken links.
As a dashboard enhancer, I want additional tips like IG request links, so that users get contextual help.
As a content manager, I want language tailored specifically for FABS, so that instructions are relevant and clear.
As a banner controller, I want no cross-app banners between FABS and DABS, so that interfaces stay focused.
As a period tracker, I want visibility into submission start/end dates, so that deadlines are not missed.
As a resources designer, I want the Resources page redesigned to match Broker styles, so that consistency improves usability.
As a tester reporter, I want summaries of user testing shared with agencies, so that feedback loops enhance UX.
As a monitoring setup, I want New Relic configured across apps, so that performance issues are tracked in real-time.
As a UI editor, I want to complete rounds of edits on pages like Homepage for leadership approval, so that designs iterate efficiently.
As a issue tracker, I want to log Tech Thursday bugs and fixes, so that development cycles are documented.
As a testing summarizer, I want consolidated user testing notes on navigation and errors, so that priorities are clear.
As a scheduler, I want to begin and schedule UI user testing sessions, so that feedback is gathered systematically.
As a designer, I want timelines and scopes for UI audits on landing and help pages, so that projects are planned effectively.
As a file accessor, I want to retrieve published FABS files, so that archived data is retrievable.
As a data filterer, I want only grant records sent to USAspending, so that irrelevant contracts are excluded.
As a mockup creator, I want content mockups for submission workflows, so that efficient designs are prototyped.
As an owner, I want configurations to send only grants to the system, so that data streams remain specialized.